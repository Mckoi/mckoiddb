
MckoiDDB
Mckoi Distributed Database ( http://www.mckoi.com/mckoiddb/ )
Author: Tobias Downer <toby@mckoi.com>
-------------------------------------------------------------

Description
===========

MckoiDDB is a distributed database system written in Java. MckoiDDB
allows you to manage the storage resources of a cluster of servers
in a network, and provides a client API for developing structured
data models.

Go to http://www.mckoi.com/mckoiddb/ for documentation and other
resources associated with MckoiDDB.


License
=======

MckoiDDB is released under the Apache License version 2 open source
license. See LICENSE.txt for details of the license. If the license
is not present in this distribution, please go to
http://www.mckoi.com/ and download an official distribution to receive
a copy of the license.


Requirements
============

MckoiDDB requires Java 1.7 to run and build. Other than requiring
Java 1.7, MckoiDDB has no dependencies on any other external
libraries.


Included in this release
========================

The important files and directories in this distribution are;

demo/        Demonstrations from the documentation.
lib/         Precompiled Binaries.
src/         The source directory.
LICENSE.txt  The license of the software in plain text format.
README       This file.
COPYRIGHT    The MckoiDDB copyright message.
pom.xml      Maven build file.


Installing and Using MckoiDDB
=============================

A quick start guide for installing MckoiDDB can be found at the
link below;

  http://www.mckoi.com/mckoiddb/docs/Quick%20Start%20Guide.html


Building MckoiDDB
=================

There are no special instructions needed to build MckoiDDB.
Simply import the source into your favorite build tool or
editor.

The source code is arranged in a standard Maven format and a
Maven pom.xml build script is included with this distribution
if you wish to use that. To compile the source under Maven,
use the following command;

  mvn install

The compiled binary will be found in the 'target/' directory.
